# üçé Une liste, c‚Äôest comme une bo√Æte dans laquelle tu ranges plusieurs objets (valeurs)
# Tu peux y mettre ce que tu veux : des cha√Ænes, des nombres, d‚Äôautres listes, etc.
# Ici, on cr√©e une liste de fruits :
fruits = ["pomme", "banane", "kiwi", "orange", "fraise"]

# 1. Acc√©der √† un √©l√©ment par son index (position, d√©but √† 0)
print(fruits[0])  # "pomme" (premier √©l√©ment)
print(fruits[3])  # "orange" (quatri√®me √©l√©ment)

# 2. Acc√©der au dernier √©l√©ment avec un index n√©gatif
print(fruits[-1])  # "fraise" (dernier √©l√©ment)
print(fruits[-2])  # "orange" (avant-dernier √©l√©ment)

# 3. Acc√©der √† une tranche (slice) de la liste : fruits[start:stop]
# Renvoie une nouvelle liste contenant les √©l√©ments de l'index start √† stop-1
print(fruits[1:4])  # ['banane', 'kiwi', 'orange'] (indices 1,2,3)

# 4. Sauter des √©l√©ments dans une tranche : fruits[start:stop:step]
print(fruits[0:5:2])  # ['pomme', 'kiwi', 'fraise'] (indices 0,2,4)

# 5. Modifier un √©l√©ment (affectation par index)
fruits[2] = "melon"
print(fruits)  # ['pomme', 'banane', 'melon', 'orange', 'fraise']

# 6. Modifier une tranche (remplacer plusieurs √©l√©ments)
fruits[1:3] = ["cerise", "mangue"]
print(fruits)  # ['pomme', 'cerise', 'mangue', 'orange', 'fraise']

# 7. Ajouter un √©l√©ment √† la fin (append)
fruits.append("abricot")
print(fruits)  # ['pomme', 'cerise', 'mangue', 'orange', 'fraise', 'abricot']

# 8. Ins√©rer un √©l√©ment √† une position donn√©e (insert)
fruits.insert(2, "ananas")  # Ajoute "ananas" √† l'index 2
print(fruits)  # ['pomme', 'cerise', 'ananas', 'mangue', 'orange', 'fraise', 'abricot']

# 9. Supprimer un √©l√©ment par sa valeur (remove)
fruits.remove("orange")
print(fruits)  # ['pomme', 'cerise', 'ananas', 'mangue', 'fraise', 'abricot']

# 10. Supprimer un √©l√©ment par son index (del)
del fruits[0]
print(fruits)  # ['cerise', 'ananas', 'mangue', 'fraise', 'abricot']

# 11. Obtenir la longueur de la liste (nombre d'√©l√©ments)
print(len(fruits))  # 5

# 12. Parcourir la liste avec une boucle for
for fruit in fruits:
    print(fruit)

# 13. pop() : supprime et retourne un √©l√©ment (par d√©faut le dernier)
dernier = fruits.pop()
print("√âl√©ment retir√© avec pop():", dernier)
print("Liste apr√®s pop():", fruits)

# 14. pop(index) : supprime et retourne l'√©l√©ment √† l'index donn√©
deuxieme = fruits.pop(1)
print("√âl√©ment retir√© avec pop(1):", deuxieme)
print("Liste apr√®s pop(1):", fruits)

# 15. extend(iterable) : ajoute plusieurs √©l√©ments √† la fin
fruits.extend(["pasteque", "melon"])
print("Liste apr√®s extend(['pasteque', 'melon']):", fruits)

# 16. index(element) : retourne l'index de la premi√®re occurrence de l'√©l√©ment
pos = fruits.index("melon")
print("Position de 'melon' dans la liste:", pos)

# 17. count(element) : compte combien de fois l'√©l√©ment appara√Æt
nb_cerise = fruits.count("cerise")
print("Nombre d'occurrences de 'cerise':", nb_cerise)

# 18. sort() : trie la liste (modifie la liste en place)
fruits.sort()
print("Liste apr√®s sort():", fruits)

# 19. sort(reverse=True) : trie en ordre d√©croissant
fruits.sort(reverse=True)
print("Liste apr√®s sort(reverse=True):", fruits)

# 20. reverse() : inverse l'ordre des √©l√©ments (modifie la liste en place)
fruits.reverse()
print("Liste apr√®s reverse():", fruits)

# 21. clear() : vide la liste
fruits.clear()
print("Liste apr√®s clear():", fruits)
